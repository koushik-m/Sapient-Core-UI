dont write the code 
prepare the unit test
create the function and leave it


before each in jasmine
        - this will execute for every test case;
        - we will set required artifacts for the unit test.
mocks in jasmine
        - they are the dummy functions which really dont have any code, but acts as a real function
        - we can create a mock and then we will return the data from the mock.
        - they are helpful in simulating the behaviour of dummy servers, dummy http calls    


FACTORY DESIGN PATTERN
    - provide just interface. depending on input subclasses will decide what needs to be created
    - very widely used in modern softwares.
    - 
MODULE DESIGN PATTERN
    - all the methods will be kept private and you only expose those methods in the end to the client    

TEST DRIVEN DEVELOPMENT CODE (PRECAUTIONS TO BE TAKEN)
    - Make sure your code is not dependent on user interface.
    - Make sure your code is following the SRP(single responsibility principle)
    - Ensure that there are proper exception handling in your code.
    - Ensure your functions have return statements.

   The architecture is more flexible if we follow these steps.

   -jasmine, mocha and jest are unit testing libraries
   -chai is an assertion library
   -sinon.js is a mock library (can create mock library)

   steps 
   - all the three libraries are having the describe function
    purpose: we can create the environment
             we can group the unit test.

    IT function
        the actual unit testing happens within the it methods
    beforeeach method
        This method will allow you to set the data or mock data or mock function 
        This mock data can be set before execution of every unit test.                                          

BUILT IN nodejs libraries
    -file system(fs) - used for creating, deleting
    -http
    -https
    -io
    -cpu

BEST PRACTICE TO INSTALL A MODULE FOR A PROJECT
------------------------------------------------

npm i --save {modulename}
for multiple modules put the module names space seperated.

the default node modules always consider the first parameter of callback function as error
the second parameter will be the success info


pipe method in node will take the data from one method and send that info to other method.

WEB WORKER
----------
-they will interact with the browser.
-run background processes on the browser.

STEPS TO WORK WITH WEB WORKER
------------------------------
    -add the modernizr cdn to the webpage.
    -
SERVICE WORKERS
---------------
    -purpose: to create a proxy between the actual server and the browser.
    -used to perform offline work

    USE CASE IDEAS
    --------------
    -data synchronization in the background
    -caching purpose
    -for offline mode working
    -push notification
    
    service worker lifecycle methods
    --------------------------------

    downloading
    installing
    activating


ERROR HANDLING IN NODE JS

    -in nodejs errors can be due to many reasons. the simple try catch blocks can handle the errors but if a global error is occuring then we will use domains to
    -event driven approach
    
BODY-PARSER IN NODEJS
the body parser will intercept the incoming request and makes a clean object.

A middleware in nodejs will have access to the request and response
we will apply the business logic and we will redirect the request to the next step.